-- MySQL Script generated by MySQL Workbench
-- Fri Sep  8 10:34:27 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema auth
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema auth
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `auth` DEFAULT CHARACTER SET utf8 ;
USE `auth` ;

-- -----------------------------------------------------
-- Table `auth`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth`.`User` (
  `user_id` NVARCHAR(20) NOT NULL,
  `password` NVARCHAR(50) NOT NULL,
  `email` NVARCHAR(50) NULL,
  `name` NVARCHAR(20) NULL,
  `register_date` DATETIME NULL,
  `phone` NVARCHAR(15) NULL,
  `address` NVARCHAR(300) NULL,
  `company` NVARCHAR(20) NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `auth`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth`.`Client` (
  `client_id` NVARCHAR(20) NOT NULL,
  `client_secret` NVARCHAR(20) NULL,
  `description` NVARCHAR(100) NULL,
  `domain` NVARCHAR(100) NULL,
  PRIMARY KEY (`client_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `auth`.`Scope`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth`.`Scope` (
  `scope_id` NVARCHAR(50) NOT NULL,
  `client_id` NVARCHAR(20) NOT NULL,
  `description` NVARCHAR(100) NULL COMMENT '클라이언트 권한',
  `is_default` NVARCHAR(50) NULL,
  PRIMARY KEY (`scope_id`, `client_id`),
  INDEX `fk_Scope_Client_idx` (`client_id` ASC),
  CONSTRAINT `fk_Scope_Client`
    FOREIGN KEY (`client_id`)
    REFERENCES `auth`.`Client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `auth`.`UserClientScope`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth`.`UserClientScope` (
  `user_id` NVARCHAR(20) NOT NULL,
  `scope_id` NVARCHAR(50) NOT NULL,
  `client_id` NVARCHAR(20) NOT NULL COMMENT '처음 로그인시 등록되는 권한맵핑',
  INDEX `fk_UserClientScope_User1_idx` (`user_id` ASC),
  INDEX `fk_UserClientScope_Scope1_idx` (`scope_id` ASC, `client_id` ASC),
  CONSTRAINT `fk_UserClientScope_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `auth`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UserClientScope_Scope`
    FOREIGN KEY (`scope_id` , `client_id`)
    REFERENCES `auth`.`Scope` (`scope_id` , `client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `auth`.`Token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth`.`Token` (
  `token_id` VARCHAR(50) NOT NULL,
  `user_id` NVARCHAR(20) NOT NULL,
  `client_id` NVARCHAR(20) NOT NULL,
  `create_time` DATETIME NULL,
  `expire_date` DATETIME NULL,
  INDEX `fk_token_User1_idx` (`user_id` ASC),
  PRIMARY KEY (`token_id`),
  INDEX `fk_token_Client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_token_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `auth`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_token_Client`
    FOREIGN KEY (`client_id`)
    REFERENCES `auth`.`Client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
