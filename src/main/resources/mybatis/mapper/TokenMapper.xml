<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="token">

    <resultMap id="TokenMap" type="Token">
        <result property="clientId" column="client_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <collection property="scopes" column="{clientId=client_id,userId=user_id}" javaType="java.util.ArrayList" ofType="String" select="token.selectScopeList"/>
    </resultMap>

    <insert id="insertToken" parameterType="Token">
        INSERT INTO Token
        (token_id,
        user_code,
        client_id,
        create_time,
        expire_date)
        VALUES
        (#{tokenId},
        #{userId},
        #{clientId},
        #{createTime},
        #{expireDate})
    </insert>

    <select id="getToken" parameterType="String" resultMap="TokenMap">
        select token_id,
			   user_code,
			   client_id,
			   create_time,
			   expire_date
          from Token
         where token_id = #{tokenId}
    </select>

    <select id="selectScopeList" parameterType="java.util.Map" resultType="String">
        select scope_id
        from UserClientScope
        where client_id = #{clientId}
          AND user_code = #{userId}
    </select>

    <select id="findUserByToken" resultType="Token" parameterType="AuthenticationRequest">
        select token_id,
			   user_code,
			   client_id,
			   create_time,
			   expire_date
          from Token
         where user_code = #{userId}
           and client_id = #{clientId}
    </select>

    <delete id="deleteToken" parameterType="String">
        DELETE FROM Token
         WHERE token_id = #{tokenId}
    </delete>

    <delete id="deleteTokenByUserCode" parameterType="Integer">
      DELETE FROM Token
         WHERE user_code = #{param1}
    </delete>

    <delete id="deleteClientIdByToken" parameterType="String">
        DELETE FROM Token
        WHERE client_id = #{param1}
    </delete>

    <select id="selectTokens" resultType="Token">
        select token_id,
			   user_code,
			   client_id,
			   create_time,
			   expire_date
          from Token a
          join User b on a.user_code = b.user_code
    </select>

    <select id="findByAdminToken" resultType="Token">
        select token_id,
                user_code,
                client_id,
                create_time,
                expire_date
         from Token
        where token_id = #{tokenId}
          and exists  (select 1
                         from UserClientScope
                        where (user_code, scope_id) = (select user_code
                                                          , 'Admin'
                                                       from Token
                                                      where token_id = #{tokenId}))
    </select>
</mapper>
